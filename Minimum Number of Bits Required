# VPROPEL-POD
Problem of the Day
Memory usage has to be minimized in an embedded system application, the embedded system uses same number of bits to store all numbers of the application. The programmer wants to use only the minimum number of bits required for storing ‘n’ integers. Given a set of ‘n’ integers, write a C++ program to find the minumum number of bits required to store each of the integer. For example, if five integers 4, 16, 31, 23, 2 are to stored then the minimum number of bits required to store each integer is 5.

Boundary Conditions

0<=x<= 922337203685477580 where ‘x’ is any value in the number
Input Format

First line contains the number of numbers used in the application, n

Next line contains the numbers of the application separated by a space

Output Format

Print the minimum number of bits required to store the numbers of the application

C++ Code :

#include<iostream>
#include<math.h>
using namespace std;
int main()
{
    int n,c=0;
    cin>>n;
    long long int a[n];
    for (int i=0;i<n;i++)
    cin>>a[i];
    for (int i=0;i<n;i++)
    {
        int j = log2(a[i])+1;
        if(j>c)
        {
            c = j;
        }
    }
    cout<<c;
}
